name: MLOps Pipeline - Used Cars Price Prediction

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_ML_WORKSPACE: cars
  AZURE_RESOURCE_GROUP: default_resource_group
  AZURE_SUBSCRIPTION_ID: f2f9c878-1ca2-40dc-a868-b68e6b45074d

jobs:
  data-validation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run data validation tests
      run: |
        python -m pytest tests/ -v --tb=short

    - name: Check data file exists
      run: |
        if [ ! -f "used_cars.csv" ]; then
          echo "Warning: used_cars.csv not found"
          exit 0
        else
          echo "Data file found successfully"
        fi

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true

    - name: Check code formatting with black
      run: |
        black --check src/ --diff
      continue-on-error: true

  model-training:
    needs: [data-validation, code-quality]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install Azure CLI and ML extension
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        az extension add -n ml

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install azure-ai-ml azure-identity pandas scikit-learn mlflow

    - name: Run MLOps Pipeline
      run: |
        python .github/workflows/run_pipeline.py
      env:
        AZURE_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}
        AZURE_RESOURCE_GROUP: ${{ env.AZURE_RESOURCE_GROUP }}
        AZURE_ML_WORKSPACE: ${{ env.AZURE_ML_WORKSPACE }}

  model-deployment:
    needs: model-training
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Model
      run: |
        echo "Model deployment step - implement based on your deployment strategy"
        echo "Current branch: ${{ github.ref }}"
        echo "Event: ${{ github.event_name }}"
        # Add your model deployment logic here
